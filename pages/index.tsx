import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import { FormEvent, useState } from 'react'
import { useMultiStepForm } from '../hooks/useMultiForm'

import { UserForm } from '../component/forms/UserForm'
import { SubmitHandler, useForm } from 'react-hook-form'
import { AddressForm } from '../component/forms/AddressForm'
import { InterfaceFormData } from '../component/forms/_typesafe'

export default function Home() {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<InterfaceFormData>()

  const {
    step,
    steps,
    currentStepIndex,
    isFirstStep,
    isLastStep,
    backStep,
    nextStep,
  } = useMultiStepForm([
    <UserForm register={register} errors={errors} />,
    <AddressForm register={register} errors={errors} />,
    <h1>Confirm</h1>,
  ])

  const onSubmit: SubmitHandler<Partial<InterfaceFormData>> = (form_data) => {
    if (!isLastStep) return nextStep()
    console.log(form_data)
    alert('Successfully Created!')
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <div
          style={{
            position: 'relative',
            background: 'white',
            border: '1px solid black',
            padding: '2rem',
            margin: '1rem',
            borderRadius: '.5rem',
            fontFamily: 'Arial',
            maxWidth: 'max-content',
          }}
        >
          <form onSubmit={handleSubmit(onSubmit)}>
            <div style={{ position: 'absolute', top: '.5rem', right: '.5rem' }}>
              {currentStepIndex + 1} / {steps.length}
            </div>
            {step}
            <div
              style={{
                marginTop: '1rem',
                display: 'flex',
                gap: '.5rem',
                justifyContent: 'flex-end',
              }}
            >
              {!isFirstStep && (
                <button type='button' onClick={backStep}>
                  Back
                </button>
              )}
              <button type='submit'>{isLastStep ? 'Finish' : 'Next'}</button>
            </div>
          </form>
        </div>
      </main>
    </>
  )
}
